#include <iostream>
#include<algorithm>
using namespace std;

int binary_search(int arr[],int start,int end,int target)
{
  while(start<=end)
  {
     int mid=(start+end)/2;
     if(arr[mid]==target)
     {
        return mid;
     }
     else if(arr[mid]>target)
     {
       end=mid-1;
     }
     else{
      start=mid+1;
     }
  }
  return -1;
}


int main() {
  int arr[]={3,4,5,6,11,13,14,15,56,70};
  int size = sizeof(arr)/sizeof(arr[0]);
  int target =3;
  
  //------>>>> {this exponential search and it is use for improve the timecomplexity of Binary search.}
  //------->>>> {basically it is use on the large size of array or we can say that the infinite array .}
  
  if(arr[0]==target)
  {
    // cout<<" printing the target element index at: "<<0<<" "<<endl;
    // cout<<" printing the target element : "<<arr[0]<<" ";
    return 0;
  }

  int i=1;
  while(i<size && arr[i]<=target)
  {
    i=i*2;
  }
  int ans= binary_search(arr,i/2,min(i,size-1),target);
  if(ans==-1)
  {
    cout<<"the target elemnet is not found: "<<endl;
  }
  else{
    cout<<" printing the target element index: "<<ans<<" "<<endl;
    cout<<" printing the target element : "<<arr[ans]<<" ";
  }
  return 0;
}
