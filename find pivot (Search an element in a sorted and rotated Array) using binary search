#include <iostream>
#include <vector>
using namespace std;

int pivotSearch(vector<int> arr, int size, int target) {
  int low = 0;
  int high = size - 1;
  while (low <= high) {
    int mid = low + (high - low) / 2;
    if (target == arr[mid]) {
      return mid;
    }
    if (arr[low] <= arr[mid]) {
      if (arr[low] <= target && target <= arr[mid]) {
        high = mid - 1;
      } else {
        low = mid + 1;
      }
    } else {
      if (arr[mid] <= target && target <= arr[high]) {
        low = mid + 1;
      } else {
        high = mid - 1;
      }
    }
  }
  return -1;
}

int main() {
  vector<int> arr{5, 6, 7, 8, 9, 10, 1, 2, 3};
  int target = 3;
  //   cout << " 1 target element at index:" << pivotSearch(arr, arr.size(),
  //   target);
  // cout<<endl;
  //   cout<<endl;
  //   cout<<endl;
  int output = pivotSearch(arr, arr.size(), target);

  if (output == -1) {
    cout << "element is not found ";
  } else {
    cout << " 2 element is found at index: " << output << " ";
  }
  return 0;
}
